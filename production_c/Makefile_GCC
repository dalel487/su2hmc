#Test if we are NOT using cray
ifeq ($(shell which cc | grep -c cray),0)
#Test if we are NOT using mpich
ifeq ($(shell which mpicc | grep -c mpich), 0) 
#Setup for OpenMPI
OMPI_CC=gcc
CC=mpicc
else
#Setup for MPICH
CC=mpicc -cc=gcc
endif
else
#Setup for Cray
CC=cc
endif

IFLAGS=     -I../INCLUDE/ -I ${AOCL_ROOT}/include $(shell gsl-config --cflags)

CFLAGS=	$(IFLAGS) -std=gnu11 -fcommon \
		-march=znver2 -mtune=znver3 -D__RANLUX__ -DINT_OMF2\
		-fopenmp-simd -static-libgcc -DSA3AT -flto\
		-foffload=disable #amdgcn-amdhsa="-march=gfx902" #-fopenacc\
#		-pg -fprofile-arcs-foffload=amdgcn-amdhsa="-march=gfx90c"


ifdef AOCL_ROOT
CFLAGS += -DAMD_BLAS
LFLAGS = -L${AOCL_ROOT}/lib/ -lblis 
LFLAGS	+=	 -lm $(shell gsl-config --libs-without-cblas)
else ifdef LIBSCI_BASE_DIR
CFLAGS += -DUSE_BLAS
#Automatic on LUMI?
#LFLAGS = ‚ÄêL${LIBSCI_BASE_DIR}/gnu/91/x86_64/lib/ -lsci_comp
LFLAGS	+=	 -lm $(shell gsl-config --libs-without-cblas)
else
CFLAGS += -DGSL_BLAS
LFLAGS	+=	 -lm $(shell gsl-config --libs)
endif

EXE=	su2hmc_GCC

SRC= \
	coord.c \
	random.c \
	matrices.c \
	congrad.c \
	bosonic.c\
	fermionic.c\
	force.c\
	par_mpi.c \
	integrate.c \
	clover.c \
	su2hmc.c 

INC= \
	sizes.h \
	errorcodes.h \
	coord.h \
	random.h \
	matrices.h \
	par_mpi.h \
	integrate.h\
	clover.h\
	su2hmc.h 
#
# No need to edit below this line
#
.SUFFIXES: .c .o
.PHONY: clean debug release advisor tar

OBJ=	$(SRC:.c=.o)
DEPS=	$(OBJ:.o=.d)
EDT=	$(SRC:.c=.c~)
TMP=	$(MOD) $(EDT) core

-include $(DEPS)
all:	$(EXE)

profiler:	CFLAGS += -g -fprofile-generate=./gcc_pgo
profiler:	release

release:	CFLAGS +=  -Ofast -funroll-all-loops -fcf-protection=none #-fprofile-use=./gcc_pgo
release:	$(EXE)

debug:	CFLAGS += -g -O0 -D_DEBUG #-DDIAGNOSTIC -DNO_TIME -DNO_SPACE
debug:	$(EXE)

$(EXE):	$(OBJ)
		$(CC) ../main.c -MMD -MP $(CFLAGS) -o $@ $(OBJ) $(LFLAGS)  

$(OBJ):	$(MF) 

clean:
		rm -f $(OBJ) $(TMP) $(DEPS)

INP=	\
	midout \

tar:
	tar cvfz $(EXE).tar $(MF) $(SRC) $(INC) $(INP) $(EXE) $(DEPS)
