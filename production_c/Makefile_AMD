MF=	Makefile

CC=mpicc -cc=hipcc

IFLAGS=     -I../INCLUDE/ -I /opt/AMD/aocl/aocl-linux-aocc-3.1.0/include/\
				-I/opt/AMD/aocc-compiler-3.2.0/include

CFLAGS=	$(IFLAGS) -std=gnu11 -DUSE_BLAS -fcommon -static -DSA3AT\
			-fveclib=AMDLIBM -march=znver1 -mtune=znver3 -D__RANLUX__\
			-fopenmp-simd -fopenacc -fremap-arrays\
		 # -fprofile-instr-use

LFLAGS=	-L/opt/AMD/aocl/aocl-linux-aocc-3.1.0/lib/	-L/opt/AMD/aocc-compiler-3.2.0/lib \
		-Wl -latomic -lpthread -lm -ldl -lalm -lblis 

EXE=	su2hmc_AMD

SRC= \
	su2hmc.c \
	force.c\
	bosonic.c\
	fermionic.c\
	congrad.c \
	par_mpi.c \
	coord.c \
	random.c \
	matrices.c \

INC= \
	su2hmc.h \
	sizes.h \
	par_mpi.h \
    random.h \
    matrices.h \
    coord.h \
    errorcodes.h \

#
# No need to edit below this line
#

.SUFFIXES: .c .o
.PHONY: clean debug release profiler tar

OBJ=	$(SRC:.c=.o)
EDT=	$(SRC:.c=.c~)
TMP=	$(MOD) $(EDT) core

all:	$(EXE)

profiler:	CFLAGS += -g -D_DEBUG #-fprofile-generate

profiler:	release

release:	CFLAGS +=  -Ofast -finline-aggressive -finline-recursion=4\
				-funroll-loops -flto=full -fnt-store\
#				-mllvm -enable-strided-vectorization -mllvm -enable-epilogue-vectorization\
#				-mllvm -merge-constant -mllvm -reduce-array-computations=3

release:	$(EXE)

debug:	CFLAGS += -g -O0  -flto=full\
		-D_DEBUG #-DDIAGNOSTIC -DNO_TIME -DNO_SPACE

debug:	$(EXE)

$(EXE):	$(OBJ)
	$(CC) $(CFLAGS) -o $@ $(OBJ) $(LFLAGS)

$(OBJ):	$(MF) 

clean:
	rm -f $(OBJ) $(TMP)

INP=	\
	midout \
	con

tar:
	tar cvfz $(EXE).tar $(MF) $(SRC) $(INC) $(INP) $(EXE)
