MF=	Makefile

CC= mpicc
NVCC = nvcc

IFLAGS=     -I../INCLUDE/ -I/opt/AMD/aocl/aocl-linux-aocc-3.0-6/include/ \

CFLAGS=      $(IFLAGS) -std=gnu99 -DUSE_BLAS -fcommon\
		 -march=native  -DUSE_RAN2 \
		 -fopenmp-simd -fopenmp  -DSA3AT -fveclib=AMDLIBM -flto

LFLAGS=	-L/opt/AMD/aocl/aocl-linux-aocc-3.0-6/lib/  -Wl -latomic \
		-liomp5 -lpthread -lm -ldl -lalm -lblis\

EXE=	su2hmc_AMD

SRC= \
	su2hmc.c \
	force.c\
	bosonic.c\
	fermionic.c\
	par_mpi.c \
      coord.c \
      random.c \
      matrices.c \

INC= \
	su2hmc.h \
	sizes.h \
      par_mpi.h \
      slash.h \
      random.h \
      matrices.h \
      coord.h \
      errorcodes.h \

#
# No need to edit below this line
#

.SUFFIXES: .c .o
.PHONY: clean debug release advisor tar

OBJ=	$(SRC:.c=.o)

#MOD=	$(SRC:.c=.mod)
MOD=	
EDT=	$(SRC:.c=.c~)
TMP=	$(MOD) $(EDT) core

.f.o:
	$(FC) $(FFLAGS) -c $<

all:	$(EXE)

release:	CFLAGS +=  -Ofast -finline-aggresive -finline-recursion=4\
				-funroll-loops
release:	$(EXE)

debug:	CFLAGS += -g -O0  -finline-aggresive\
		-D_DEBUG -DUSE_RAN2 #-DDIAGNOSTIC -DNO_TIME -DNO_SPACE

debug:	$(EXE)

$(EXE):	$(OBJ)
	$(CC) $(CFLAGS) -o $@ $(OBJ) $(LFLAGS)

$(OBJ):	$(MF) 

clean:
	rm -f $(OBJ) $(TMP)

INP=	\
	midout \
	con

tar:
	tar cvfz $(EXE).tar $(MF) $(SRC) $(INC) $(INP) $(EXE)
