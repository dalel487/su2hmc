#Test if we are NOT using cray
ifeq ($(shell which cc | grep -c cray),0)
#Test if we are NOT using mpich
ifeq ($(shell which mpicc | grep -c mpich), 0) 
#Setup for OpenMPI
OMPI_CC=clang
CC=mpicc
else
#Setup for MPICH
CC=mpicc -cc=clang
endif
else
#Setup for Cray
CC=cc
endif
IFLAGS=     -I../INCLUDE/ -I ${AOCL_ROOT}/include $(shell gsl-config --cflags)

CFLAGS=	-Wall $(IFLAGS) -std=gnu11 -DAMD_BLAS -fcommon -DSA3AT -flto -DINT_OMF2\
			-fveclib=AMDLIBM -march=znver2 -mtune=znver3 -D__RANLUX__  \
			-fopenmp=libomp -fopenmp-simd -static-libgcc
		  #-fprofile-instr-use

LFLAGS=	-Wl -L${AOCL_ROOT}/lib -L/usr/local/lib64 -ldl -lalm -lm -lblis -lamdalloc -latomic $(shell gsl-config --libs-without-cblas)

EXE=	su2hmc_AMD

SRC= \
	su2hmc.c \
	force.c\
	bosonic.c\
	fermionic.c\
	congrad.c \
	par_mpi.c \
	coord.c \
	random.c \
	matrices.c \
	integrate.c

INC= \
	su2hmc.h \
	sizes.h \
	par_mpi.h \
    random.h \
    matrices.h \
    coord.h \
    errorcodes.h \
	 integrate.h

#
# No need to edit below this line
#

.SUFFIXES: .c .o
.PHONY: clean debug release profiler tar

OBJ=	$(SRC:.c=.o)
DEP=	$(SRC:.o=.d_aocc)
EDT=	$(SRC:.c=.c~)
TMP=	$(MOD) $(EDT) core

all:	$(EXE)

profiler:	CFLAGS += -g #-D_DEBUG #-fprofile-generate

profiler:	release

release:	CFLAGS +=  -Ofast -zopt -flto=full

release:	$(EXE)

debug:	CFLAGS += -g -O0  -flto=full -D_DEBUG #-DDIAGNOSTIC -DNO_TIME -DNO_SPACE

debug:	$(EXE)

$(EXE):	$(OBJ)
	$(CC) $(CFLAGS) ../main.c -o $@ $(OBJ) $(LFLAGS)

$(OBJ):	$(MF)

clean:
	rm -f $(OBJ) $(TMP)

INP=	\
	midout \

tar:
	tar cvfz $(EXE).tar $(MF) $(SRC) $(INC) $(INP) $(EXE)
