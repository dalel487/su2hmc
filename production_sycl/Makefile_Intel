MF=Makefile_Intel
CC=		icpx -xc++ -fsycl 
CXX=		icpx  -fsycl -DSYCL_EXT_ONEAPI_COMPLEX

IFLAGS=   -I./INCLUDE -I"${MKLROOT}/include" -I ./ -I../production_c  $(shell gsl-config --cflags)

CFLAGS=  -qmkl  -MD  -ipo 	-xHOST\
			-DMKL_DIRECT_CALL -D__INTEL_MKL__ -D__RANLUX__ -qopenmp \
			-qopenmp-simd -DSA3AT -mllvm -loopopt=0 $(IFLAGS) 
			#-xSKYLAKE -ax'SKYLAKE-AVX512,CASCADELAKE,TIGERLAKE,COFFEELAKE,ALDERLAKE'\

MKLFLAGS=	-qmkl -L${MKLROOT}/lib/intel64 -limf #-DUSE_MKL -DMKL_DIRECT_CALL -DMKL_ILP64

LFLAGS=		-liomp5 -lstdc++ -lpthread -ldl -limf $(shell gsl-config --libs-without-cblas) #${SYCLLFLAGS}

SYCLCCFLAGS= -I./INCLUDE ${IFLAGS} -w #-expt-relaxed-constexpr 
#Replace first line of SYCLCCFLAGS with below when done. Targets every platform since 2016
#SYCLCCFLAGS=	${IFLAGS}  -arch=compute_60 -code=sm_60,sm_61,sm_70,sm_75,sm_80,sm_86,sm_90  -w \
#NEVER PUT IN -err-no. It changes the entry point

EXE=	su2hmc_SYCL

CSRC_DIR=	./production_c
CSRC=	\
	    coord.c \
	    congrad.c \
		force.c \
    	random.c \
		par_mpi.c \
		bosonic.c\
		fermionic.c\
		diagnostics.c

SYCLSRC_DIR=	../production_sycl
SYCLSRC=	\
		cubosonic.dp.cpp\
		cumatrices.dp.cpp\
		cuforce.dp.cpp\
		cusu2hmc.dp.cpp

#SYCLSRC= SYCLDA_Compile.dp.cpp
CINC=	\
		su2hmc.h \
		sizes.h \
	    par_mpi.h \
    	random.h \
	    matrices.h \
    	coord.h \
	    errorcodes.h \

#
# No need to edit below this line
#

.SUFFIXES: .c .dp.cpp .h .hpp .o 
.PHONY: clean debug release profiler tar
C_SOURCES:= $(wildcard $(CSRC_DIR)/*.c)
SYCL_SOURCES:= $(wildcard $(SYCLSRC_DIR)/*.dp.cpp)
COBJ=	$(patsubst $(CSRC_DIR)/%.c, $(CSRC_DIR)/%.o, $(C_SOURCES))
SYCLOBJ= $(patsubst $(SYCLSRC_DIR)/%.dp.cpp, $(SYCLSRC_DIR)/%.dp.o, $(SYCL_SOURCES))
CLIB= libc.a
SYCLLIB= libcu.a
SYCLLIB2= libcu2.a
#OBJ=	$(CLIB) $(SYCLLIB2)
OBJ = $(COBJ) $(SYCLOBJ) 

#MOD=	$(CSRC:.c=.mod)
MOD=	
CEDT=	$(CSRC:.c=.c~)
SYCLEDT=	$(SYCLSRC:.dp.cpp=.dp.cpp~)
TMP=	$(MOD) $(CEDT) $(SYCLEDT) core

profiler:	CFLAGS += -g #-D_DEBUGCG
profiler:	SYCLCCFLAGS += -lineinfo #-D_DEBUGCG #-keep
profiler:	release

release:	CFLAGS +=  -O3 -inline-level=2 -qopt-zmm-usage=high 
release:	SYCLCCFLAGS += #--maxrregcount=64 -G -dopt=on
release:	$(EXE)

diagnostic: CFLAGS+=-DDIAGNOSTIC #-DNO_TIME -DNO_SPACE
diagnostic: SYCLCCFLAGS+=-DDIAGNOSTIC #-DNO_TIME -DNO_SPACE
diagnostic: debug

debug:		CFLAGS += -O0 -g -D_DEBUG
debug:		SYCLCCFLAGS += -O0 -g -D_DEBUG 
debug:		$(EXE)
		 
$(EXE): ../main.dp.cpp $(OBJ)
	$(CXX) $(SYCLCCFLAGS) $(CFLAGS) $(MKLFLAGS) $^ $(LFLAGS) -o $@
%.dp.o: $(SYCLSRC_DIR)/%.dp.cpp
	$(CXX) -std=c++17 $(SYCLCCFLAGS) $(CFLAGS) $(MKLFLAGS) -c $^
%.o: $(CSRC_DIR)%.c
	$(CC) -std=gnu11 $(CFLAGS) $(MKLFLAGS) -c $^  

clean:
	rm -f $(OBJ) $(COBJ) $(SYCLOBJ) $(SYCLLIB) $(CLIB) $(TMP) *.cpp?.ii *.dp.cppdafe1.* *.*bin *.fatbin.c *.ptx *.sm_* *module_id \
	*dlink* *.ltoir *.d i?_out

INP=	\
	midout \

tar:
	tar cvf $(EXE).tar $(MF) $(CSRC) $(SYCLSRC) $(CINC) $(SYCLINC) $(INP)
