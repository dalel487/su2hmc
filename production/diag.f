      SUBROUTINE DIAG(ISTART)
      IMPLICIT NONE
      INCLUDE "precision.h"
      INCLUDE "sizes.h"
C     INCLUDE COMMON BLOCK DEFINITIONS - HEADER FILE FOR EACH LABEL 
      INCLUDE "common_mat.h"
      INCLUDE "common_gauge.h" 
      INCLUDE "common_trial.h"
      INCLUDE "common_pseud.h"
      INCLUDE "common_para.h"
      INCLUDE "common_neighb.h"
      INCLUDE "common_param.h"
      INCLUDE "common_diquark.h"
      INCLUDE "common_trans.h"
      INCLUDE "common_dum1.h"
      INTEGER ISTART, I, MU, TEST, IDIRAC, IGORKOV, IADJ, IC, IDIM
      COMPLEX(KIND=CMPLXKIND) XI(NC,NGORKOV,KVOL+HALO)
      COMPLEX(KIND=CMPLXKIND) X1(NC,NDIRAC,KVOL+HALO)
      REAL(KIND=REALKIND)  DSDPI(NDIRAC,NADJ,KVOL+HALO)
C	TRIAL FIELDS DO NOT CHANGE DURING OPERATIONS SO
C	WE ASSIGN THEM OUTSIDE THE LOOP
C	STEP OF 2 SO WE CAN MATCH C EXACTLY
      IF(ISTART.EQ.2) THEN
      DO 17 MU = 1, NDIM
      CALL ZHALOSWAPALL(U11T(1,MU),1)
      CALL ZHALOSWAPALL(U12T(1,MU),1)
17    CONTINUE
      ELSE IF(ISTART.EQ.1) THEN
!     $OMP PARALLEL FOR SIMD PRIVATE(I)      
      DO 1 I = 1, KVOL, 2
      U11T(I,1) = (1.0,1.0)
      U11T(I,2) = (1,-1.0)
      U11T(I,3) = (1.0,1.0)
      U11T(I,4) = (1.0,-1.0)
      U11T(I+1,1) = (-1.0,1.0)
      U11T(I+1,2) = (1.0,1.0)
      U11T(I+1,3) = (-1.0,1.0)
      U11T(I+1,4) = (-1.0,-1.0)
      U12T(I,1) = (1.0,1.0)
      U12T(I,2) = (1.0,1.0)
      U12T(I,3) = (1.0,-1.0)
      U12T(I,4) = (1.0,-1.0)
      U12T(I+1,1) = (1.0,1.0)
      U12T(I+1,2) = (-1.0,1.0)
      U12T(I+1,3) = (-1.0,1.0)
      U12T(I+1,4) = (-1.0,-1.0)
1     CONTINUE
      CALL REUNITARISE
C     HALO EXCHANGE FOR TRIAL FIELDS
      DO 18 MU = 1, NDIM
      CALL ZHALOSWAPALL(U11T(1,MU),1)
      CALL ZHALOSWAPALL(U12T(1,MU),1)
18    CONTINUE
      ENDIF
!     $OMP PARALLEL SECTIONS NUM_THREADS(2)
!     $OMP SECTION
      DO 14 I = 1, KVOL+HALO
      WRITE(7000,16) REAL(U11T(I,1)),AIMAG(U11T(I,1)),
     &REAL(U11T(I,2)),AIMAG(U11T(I,2)), 
     &REAL(U11T(I,3)),AIMAG(U11T(I,3)), 
     &REAL(U11T(I,4)),AIMAG(U11T(I,4)) 
14    CONTINUE
!     $OMP SECTION
      DO 15 I = 1, KVOL+HALO
      WRITE(8000,16) REAL(U12T(I,1)),AIMAG(U12T(I,1)),
     &REAL(U12T(I,2)),AIMAG(U12T(I,2)), 
     &REAL(U12T(I,3)),AIMAG(U12T(I,3)), 
     &REAL(U12T(I,4)),AIMAG(U12T(I,4)) 
15    CONTINUE
!     $OMP END SECTIONS
16    FORMAT(F9.6,'+I',1X,F9.6,6X,F9.6,'+I',1X,F9.6,6X
     &       F9.6,'+I',1X,F9.6,6X,F9.6,'+I',1X,F9.6)
      DO 2 TEST = 1000, 6000, 1000
!     $OMP PARALLEL FOR
      DO 3 I = 1, KVOL
!     $OMP SIMD COLLAPSE(2)      
      DO 4 IGORKOV = 1, NGORKOV
      DO 4 IC = 1, NC
      R1(IC,IGORKOV,I)=CMPLX(0.5,0)
      PHI(IC,IGORKOV,I,1)=CMPLX(0.5,0)
4     CONTINUE
!     $OMP SIMD COLLAPSE(2)      
      DO 5 IDIRAC = 1, NDIRAC
      DO 6 IC = 1, NC
      X0(IC,IDIRAC,I,1) = CMPLX(0.5,0)
6     CONTINUE
!     $OMP SIMD
      DO 7 IADJ = 1, NADJ
      DSDPI(IDIRAC,IADJ,I) = 0
7     CONTINUE
5     CONTINUE
3     CONTINUE
      IF(TEST.LT.2001) THEN
      DO 19 I = 1, KVOL
      DO 19 IGORKOV = 1, NGORKOV
      WRITE(TEST,8) REAL(XI(1,IGORKOV,I)), AIMAG(XI(1,IGORKOV,I)),
     &              REAL(XI(2,IGORKOV,I)), AIMAG(XI(2,IGORKOV,I)) 
19    CONTINUE
      ELSEIF(TEST.LT.4001) THEN
      DO 20 I = 1, KVOL
      DO 20 IDIRAC= 1, NDIRAC
      WRITE(TEST,8) REAL(X1(1,IDIRAC,I)), AIMAG(X1(1,IDIRAC,I)),
     &              REAL(X1(2,IDIRAC,I)), AIMAG(X1(2,IDIRAC,I)) 
20    CONTINUE
      ELSEIF(TEST.LT.6001) THEN
      DO 21 I = 1, KVOL
      DO 21 IADJ = 1, NADJ
      WRITE(TEST,11)  DSDPI(1,IADJ,I), DSDPI(2,IADJ,I),
     &                DSDPI(3,IADJ,I), DSDPI(4,IADJ,I)
21    CONTINUE
      ENDIF
      IF (TEST.EQ.1000) THEN
      CALL DSLASH(XI,R1,U11T,U12T)
      ELSEIF(TEST.EQ.2000) THEN
      CALL DSLASHD(XI,R1,U11T,U12T)
      ELSEIF(TEST.EQ.3000) THEN
      CALL HDSLASH(X1,X0,U11T,U12T)
      ELSEIF(TEST.EQ.4000) THEN
      CALL HDSLASHD(X1,X0,U11T,U12T)
      ELSEIF(TEST.EQ.5000) THEN
      CALL FORCE(DSDPI, 0, RESCGG)
      ELSEIF(TEST.EQ.6000) THEN
      CALL FORCE(DSDPI, 1, RESCGG)
      ENDIF
      IF(TEST.LT.2001) THEN
      DO 9 I = 1, KVOL
      DO 23 IGORKOV = 1, NGORKOV
      WRITE(TEST+1,8) REAL(XI(1,IGORKOV,I)), AIMAG(XI(1,IGORKOV,I)),
     &              REAL(XI(2,IGORKOV,I)), AIMAG(XI(2,IGORKOV,I)) 
8     FORMAT(F9.6,'+I',F9.6,6X,F9.6,'+I',F9.6)      
23    CONTINUE
      WRITE(TEST+1,*) ""
9     CONTINUE
      ELSEIF(TEST.LT.4001) THEN
      DO 10 I = 1, KVOL
c     SHOULD PROBABLY RELABEL THINGS AT SOME POINT
      DO 22 IDIRAC= 1, NDIRAC
      WRITE(TEST+1,8) REAL(X1(1,IDIRAC,I)), AIMAG(X1(1,IDIRAC,I)),
     &              REAL(X1(2,IDIRAC,I)), AIMAG(X1(2,IDIRAC,I)) 
22    CONTINUE
      WRITE(TEST+1,*) ""
10    CONTINUE
      ELSEIF(TEST.LT.6001) THEN
      DO 12 I = 1, KVOL
      DO 12 IADJ = 1, NADJ
      WRITE(TEST+1,11)  DSDPI(1,IADJ,I), DSDPI(2,IADJ,I),
     &                DSDPI(3,IADJ,I), DSDPI(4,IADJ,I)
11    FORMAT(F9.6,2X,F9.6,2X,F9.6,2X,F9.6)
12    CONTINUE
      ENDIF
2     CONTINUE
      END SUBROUTINE DIAG
