MF=Makefile_GCC
CC=		gcc-13
CXX=		g++-13
HIPCC=	hipcc
HIP_PLATFORM='amd'
HIP_PATH ?= $(shell hipconfig --path)

IFLAGS=     -I../INCLUDE/ -I ${AOCL_ROOT}/include $(shell gsl-config --cflags)\
				-I $(HIP_PATH)/include/hipblas -I $(HIP_PATH)/include/\
				-I /opt/rocmplus-6.3.3/hipifly/
			#	-I /opt/nvidia/hpc_sdk/Linux_x86_64/2024/cuda/include/ \
			#	-I /opt/nvidia/hpc_sdk/Linux_x86_64/2024/math_libs/include/ 

CFLAGS=	$(IFLAGS) -fcommon -D__HIPCC__ -march=native -DINT_OMF2 \
		-static-libgcc -DSA3AT  -D__HIP_PLATFORM_AMD__\
		-DAMD_BLAS #amdgcn-amdhsa="-march=gfx902" #-fopenacc\-foffload=disable 
#		-pg -fprofile-arcs-foffload=amdgcn-amdhsa="-march=gfx90c"

HIPLFLAGS=	-L$(HIP_PATH)/lib/ -lhipblas  -lomp #-lhip -lhiprt 

LFLAGS=	-L${AOCL_ROOT}/lib -L/usr/local/lib64 -ldl -lamdlibm  -lomp\
			-lm -lalm -lm -lblis -lamdalloc -latomic $(shell gsl-config --libs-without-cblas)

HIPCCFLAGS=	${IFLAGS} -famd-opt -D__HIP_PLATFORM_AMD__  -DINT_OMF2 #-expt-relaxed-constexpr 
			#Last flag is an experimental one used to call host functions in device code. Not sure
			#if it does what we want because the error message suggesting it came up when declaring
			#a11 and a12 in the Dslash routine
#Replace first line of HIPCCFLAGS with below when done. Targets every platform since 2016
#HIPCCFLAGS=	${IFLAGS}  -arch=compute_60 -code=sm_60,sm_61,sm_70,sm_75,sm_80,sm_86,sm_90 -err-no -w \

EXE=	su2hmc_HIP

CSRC_DIR=	../production_c
CSRC=	\
	    coord.hip.c \
	    congrad.hip.c \
		force.hip.c \
    	random.hip.c \
		par_mpi.hip.c \
		bosonic.hip.c\
		fermionic.hip.c\
		diagnostics.hip.c

HIPSRC_DIR=	../production_hip
HIPSRC=	\
		hipbosonic.hip.cpp\
		hipmatrices.hip.cpp\
		hipforce.hip.cpp\
		hipsu2hmc.hip.cpp

#HIPSRC= HIPDA_Compile.hip
CINC=	\
		su2hmc.h \
		sizes.h \
	    par_mpi.h \
    	random.h \
	    matrices.h \
    	coord.h \
	    errorcodes.h 

#
# No need to edit below this line
#

.SUFFIXES: .hip.c .hip.cpp .h .hpp .o 
.PHONY: clean debug release profiler tar
C_SOURCES:= $(wildcard $(CSRC_DIR)/*.hip.c)
HIP_SOURCES:= $(wildcard $(HIPSRC_DIR)/*.hip.cpp)
COBJ=	$(patsubst $(CSRC_DIR)/%.hip.c, $(CSRC_DIR)/%.o, $(C_SOURCES))
HIPOBJ= $(patsubst $(HIPSRC_DIR)/%.hip.cpp, $(HIPSRC_DIR)/%.o, $(HIP_SOURCES))
#CLIB= libc.a
#HIPLIB= libhip.a
#HIPLIB2= libhip2.a
#OBJ=	$(CLIB) $(HIPLIB2)
OBJ = $(COBJ) $(HIPOBJ) 

#MOD=	$(CSRC:.c=.mod)
MOD=	
CEDT=	$(CSRC:.hip.c=.hip.c~)
HIPEDT=	$(HIPSRC:.hip.cpp=.hip.cpp~)
TMP=	$(MOD) $(CEDT) $(HIPEDT) core

profiler:	CFLAGS += -g #-D_DEBUG
profiler:	HIPCCFLAGS += -lineinfo # -D_DEBUG#-keep
profiler:	release

release:	CFLAGS +=  -Ofast -funroll-all-loops -fcf-protection=none #-fprofile-use=./gcc_pgo
release:	$(EXE)

diagnostic: CFLAGS+=-DDIAGNOSTIC #-DNO_TIME -DNO_SPACE
diagnostic: HIPCCFLAGS+=-DDIAGNOSTIC #-DNO_TIME -DNO_SPACE
diagnostic: debug

debug:		CFLAGS += -O0 -g -D_DEBUG -rdynamic 
debug:		HIPCCFLAGS += -O0 -ggdb -D_DEBUG
debug:		$(EXE)
		 
#$(EXE):   ../main.c $(OBJ)
$(EXE):	HIPCCFLAGS += --offload-arch=native #-dopt=on
$(EXE): $(OBJ) 
	$(HIPCC)  $(HIPCCFLAGS) -std=gnu11 -fopenmp -fopenmp-simd $(CFLAGS) -o $@ $^  -x c ../main.hip.c $(LFLAGS) $(HIPLFLAGS)
%.o: $(HIPSRC_DIR)/%.hip.cpp
	$(HIPCC) $(HIPCCFLAGS) -std=c++14 -fopenmp $(CFLAGS) -c $^ -o $@
%.o: $(CSRC_DIR)%.hip.c
	$(HIPCC) -std=gnu11  -fopenmp -fopenmp-simd $(CFLAGS) -c $^  

clean:
	rm -f $(OBJ) $(COBJ) $(HIPOBJ) $(HIPLIB) $(CLIB) $(TMP) *.cpp?.ii *.cudafe1.* *.*bin *.fatbin.c *.ptx *.sm_* *module_id \
	*dlink* *.ltoir *.d i?_out

INP=	\
	midout \

tar:
	tar cvf $(EXE).tar $(MF) $(CSRC) $(HIPSRC) $(CINC) $(HIPINC) $(INP)
